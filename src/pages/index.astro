---
import Layout from "../layouts/Layout.astro";
import { CldUploadWidget } from "astro-cloudinary";
import Heading from "../components/Heading.astro";
---

<Layout title="Halloweenify">
  <main>
    <Heading dropInAnimation={true} />
    <CldUploadWidget
      id="upload-widget"
      uploadPreset="unsigned-images"
      options={{
        sources: ["local", "camera"],
        multiple: false,
      }}
    >
      <button>
        <div class="px-4 py-2 rounded-xl bg-orange-500 text-2xl font-semibold">
          UPLOAD (^Ð”^)
        </div>
      </button>
    </CldUploadWidget>
  </main>
</Layout>

<style>
  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    z-index: -1;
  }

  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }

  .open-sans-button {
    font-family: "Open Sans", sans-serif;
    font-optical-sizing: auto;
    font-weight: <weight>;
    font-style: normal;
    font-variation-settings: "wdth" 100;
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
</style>

<script>
  import { navigate } from "astro:transitions/client";

  const widget = document.getElementById("upload-widget");

  if (widget) {
    widget.addEventListener("clduploadwidget:success", ((
      e: CustomEvent<{ info: { public_id: string } }>
    ) => {
      const public_id = e.detail.info.public_id;
      navigate(`halloween-photo?id=${public_id}`);
    }) as EventListener);
  }
</script>
